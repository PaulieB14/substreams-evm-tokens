syntax = "proto3";

package evm.tokens.types.v1;

message Events {
  repeated Transfer transfers = 2;
  repeated BalanceChange balance_changes = 3;
  repeated Contract contracts = 4;
}

enum Algorithm {
  ALGORITHM_UNSPECIFIED = 0;

  // ERC-20
  ALGORITHM_LOG = 1; // log event
  ALGORITHM_CALL = 2; // call
  ALGORITHM_CHILD_CALLS = 3; // child calls
  ALGORITHM_REBASING_TOKEN = 4; // which the balances grow over time due to accrued interest

  // Native (ETH)
  ALGORITHM_BLOCK = 10; // block balance changes
  ALGORITHM_FAILED = 11; // failed transaction
  ALGORITHM_GAS = 12; // gas fee consumed
  ALGORITHM_TRANSACTION = 13; // from transaction
  ALGORITHM_SYSTEM = 14; // system contract
}

message BalanceChange {
  // -- transaction --
  bytes transaction_id = 5;

  // -- ordering --
  uint64 ordinal = 10; // storage_change.ordinal or balance_change.ordinal
  uint64 global_sequence = 11; // latest global sequence of the balance change (block_num << 32 + index)

  // -- balance change --
  bytes contract = 20; // storage_change.address
  bytes owner = 21;
  string old_balance = 22;
  string new_balance = 23;

  // -- debug --
  Algorithm algorithm = 99;
}

message Transfer {
  // -- transaction --
  bytes transaction_id = 5;

  // -- ordinal --
  uint64 ordinal = 10; // log.ordinal or call.begin_ordinal or trx.begin_ordinal
  uint64 global_sequence = 11; // latest global sequence of the transfer (block_num << 32 + index)

  // -- transfer --
  bytes contract = 20; // log.address
  bytes from = 21;
  bytes to = 22;
  string value = 23;

  // -- debug --
  Algorithm algorithm = 99;
}

message Contract {
  // -- transaction --
  bytes transaction_id = 5;

  // -- contract --
  bytes address = 10;
  string name = 11;
  string symbol = 12;
  int32 decimals = 13;
}
