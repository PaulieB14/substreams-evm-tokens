syntax = "proto3";

package evm.tokens.types.v1;

import "google/protobuf/timestamp.proto";

message Events {
  repeated Transfer transfers = 1;
  repeated BalanceChange balance_changes = 2;
}

enum BalanceChangeType {
  BALANCE_CHANGE_TYPE_UNSPECIFIED = 0;
  BALANCE_CHANGE_TYPE_ERC20_ALGO_1 = 1; // ERC-20 within a Transfer call
  BALANCE_CHANGE_TYPE_ERC20_ALGO_2 = 2; // ERC-20 different Transfer call
  BALANCE_CHANGE_TYPE_NATIVE = 3; // Native (ETH)
}

enum TransferType {
  TRANSFER_TYPE_UNSPECIFIED = 0;
  TRANSFER_TYPE_MINT = 1; // ERC-20 mint
  TRANSFER_TYPE_BURN = 2; // ERC-20 burn
  TRANSFER_TYPE_FISHING = 3; // ERC-20 fishing
}

message BalanceChange {
  // -- block --
  uint64 block_num = 1;
  string block_hash = 2;
  google.protobuf.Timestamp timestamp = 3;
  string date = 4;

  // -- transaction --
  string transaction_id = 5;

  // -- call --
  uint32 call_index = 6;
  string call_address = 7; // may indicate the “to” or “from” in a lower-level call context, but is not the address that emitted the event.

  // -- log --
  uint32 log_index = 10; // Index is the index of the log relative to the transaction. This index is always populated regardless of the state revertion of the the call that emitted this log.
  uint32 log_block_index = 11; // BlockIndex represents the index of the log relative to the Block.
  uint64 log_ordinal = 12; // the block's global ordinal when the transfer was recorded.

  // -- balance change --
  string contract = 20; // storage_change.address
  string owner = 21;
  string old_balance = 22;
  string new_balance = 23;

  // -- indexing --
  uint32 ordinal = 30; // storage.ordinal or balance_change.ordinal
  uint64 global_sequence = 31; // latest global sequence of the balance change (block_num << 32 + index)

  // -- metadata --
  BalanceChangeType type = 99;
}

message Transfer {
  // -- block --
  uint64 block_num = 1;
  string block_hash = 2;
  google.protobuf.Timestamp timestamp = 3;
  string date = 4;

  // -- transaction --
  string transaction_id = 5;

  // -- call --
  uint32 call_index = 6;
  string call_address = 7; // may indicate the “to” or “from” in a lower-level call context, but is not the address that emitted the event.

  // -- log --
  uint32 log_index = 10; // Index is the index of the log relative to the transaction. This index is always populated regardless of the state revertion of the the call that emitted this log.
  uint32 log_block_index = 11; // BlockIndex represents the index of the log relative to the Block.
  uint64 log_ordinal = 12; // the block's global ordinal when the transfer was recorded.

  // -- transfer --
  string contract = 20; // log.address
  string from = 21;
  string to = 22;
  string value = 23;

  // -- metadata --
  TransferType type = 99;
}