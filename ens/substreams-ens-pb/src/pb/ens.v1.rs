// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EnsName {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "4")]
    pub owner: ::prost::alloc::string::String,
    #[prost(string, tag = "5")]
    pub resolver: ::prost::alloc::string::String,
    #[prost(uint64, tag = "6")]
    pub ttl: u64,
    #[prost(uint64, tag = "7")]
    pub expiry: u64,
    #[prost(string, tag = "8")]
    pub addr: ::prost::alloc::string::String,
    #[prost(string, tag = "9")]
    pub contenthash: ::prost::alloc::string::String,
    #[prost(map = "string, string", tag = "10")]
    pub text_records: ::std::collections::HashMap<
        ::prost::alloc::string::String,
        ::prost::alloc::string::String,
    >,
    #[prost(uint64, tag = "11")]
    pub created_at: u64,
    #[prost(uint64, tag = "12")]
    pub updated_at: u64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NewOwner {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub owner: ::prost::alloc::string::String,
    #[prost(uint64, tag = "4")]
    pub timestamp: u64,
    #[prost(string, tag = "5")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Transfer {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub owner: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NewResolver {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub resolver: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NewTtl {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(uint64, tag = "2")]
    pub ttl: u64,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NameRegistered {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub owner: ::prost::alloc::string::String,
    #[prost(uint64, tag = "4")]
    pub cost: u64,
    #[prost(uint64, tag = "5")]
    pub expires: u64,
    #[prost(uint64, tag = "6")]
    pub timestamp: u64,
    #[prost(string, tag = "7")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NameRenewed {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub cost: u64,
    #[prost(uint64, tag = "4")]
    pub expires: u64,
    #[prost(uint64, tag = "5")]
    pub timestamp: u64,
    #[prost(string, tag = "6")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NameTransferred {
    #[prost(string, tag = "1")]
    pub name: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub label: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub owner: ::prost::alloc::string::String,
    #[prost(uint64, tag = "4")]
    pub timestamp: u64,
    #[prost(string, tag = "5")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AddrChanged {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub address: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct NameChanged {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ContenthashChanged {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub hash: ::prost::alloc::string::String,
    #[prost(uint64, tag = "3")]
    pub timestamp: u64,
    #[prost(string, tag = "4")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TextChanged {
    #[prost(string, tag = "1")]
    pub node: ::prost::alloc::string::String,
    #[prost(string, tag = "2")]
    pub key: ::prost::alloc::string::String,
    #[prost(string, tag = "3")]
    pub value: ::prost::alloc::string::String,
    #[prost(uint64, tag = "4")]
    pub timestamp: u64,
    #[prost(string, tag = "5")]
    pub transaction_hash: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EnsEvents {
    #[prost(message, repeated, tag = "1")]
    pub name_registered: ::prost::alloc::vec::Vec<NameRegistered>,
    #[prost(message, repeated, tag = "2")]
    pub name_renewed: ::prost::alloc::vec::Vec<NameRenewed>,
    #[prost(message, repeated, tag = "3")]
    pub name_transferred: ::prost::alloc::vec::Vec<NameTransferred>,
    #[prost(message, repeated, tag = "4")]
    pub new_owner: ::prost::alloc::vec::Vec<NewOwner>,
    #[prost(message, repeated, tag = "5")]
    pub new_resolver: ::prost::alloc::vec::Vec<NewResolver>,
    #[prost(message, repeated, tag = "6")]
    pub new_ttl: ::prost::alloc::vec::Vec<NewTtl>,
    #[prost(message, repeated, tag = "7")]
    pub transfer: ::prost::alloc::vec::Vec<Transfer>,
    #[prost(message, repeated, tag = "8")]
    pub addr_changed: ::prost::alloc::vec::Vec<AddrChanged>,
    #[prost(message, repeated, tag = "9")]
    pub name_changed: ::prost::alloc::vec::Vec<NameChanged>,
    #[prost(message, repeated, tag = "10")]
    pub contenthash_changed: ::prost::alloc::vec::Vec<ContenthashChanged>,
    #[prost(message, repeated, tag = "11")]
    pub text_changed: ::prost::alloc::vec::Vec<TextChanged>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StringMessage {
    #[prost(string, tag = "1")]
    pub value: ::prost::alloc::string::String,
}
